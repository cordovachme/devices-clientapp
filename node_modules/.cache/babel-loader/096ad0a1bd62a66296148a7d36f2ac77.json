{"ast":null,"code":"var _jsxFileName = \"/Users/mariacordova/Documents/exercise/devices-clientapp/src/components/DevicesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo, useState } from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport { Button, Table } from \"react-bootstrap\";\nimport CreateEditForm from \"../pages/CreateEditForm\";\nimport { DevicesContext } from \"../DevicesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  COLUMNS\n} = Constants;\n\nconst DevicesTable = props => {\n  _s();\n\n  const [state, setState] = useContext(DevicesContext);\n  const {\n    filterBy,\n    sortBy\n  } = props;\n  let {\n    devicesList,\n    isLoading\n  } = useDeviceList();\n  const [edits, setEdits] = useState({});\n  isLoading = false;\n  const data = useMemo(() => {\n    let newData = devicesList;\n\n    if (filterBy && filterBy !== \"All\") {\n      newData = devicesList.filter(device => device.type === filterBy); // devicesList.forEach(item => {\n      //         filterBy.forEach(filter => {\n      //             if (item.type === filter) {\n      //                 newData.push(item);\n      //             }\n      //         });\n      //     }\n      // );\n    }\n\n    return Object.keys(newData).map(key => edits[key] || newData[key]);\n  }, [devicesList, edits, filterBy, sortBy]);\n\n  const createHeader = () => {\n    let header = [];\n    COLUMNS.forEach(_ref => {\n      let {\n        text\n      } = _ref;\n      header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this));\n    });\n    header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this));\n    return header;\n  };\n\n  const createBody = () => {\n    let table = [];\n    data.forEach(entity => {\n      let children = []; // console.log(entity);\n\n      const {\n        system_name,\n        type,\n        hdd_capacity\n      } = entity;\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: system_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: hdd_capacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: entity,\n          onClick: e => onSelect(e, \"value\"),\n          value: entity,\n          children: \" Edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: /*#__PURE__*/_jsxDEV(CreateEditForm, {\n            entity: entity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 40\n          }, this),\n          children: \" Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this));\n      table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this));\n    });\n    return table;\n  };\n\n  const onSelect = event => {\n    // const aaa= event.target.value;\n    // console.log(\"hola\", aaa, \"===\");\n    // const entity={hh:\"00\"}\n    // return <CreateEditForm entity={entity}/>;\n    setState(state => ({ ...state,\n      entity: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: createHeader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: createBody()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DevicesTable, \"3ySjIlz3VVdpKREPT6xrhklT1ug=\", false, function () {\n  return [useDeviceList];\n});\n\n_c = DevicesTable;\nDevicesTable.propTypes = {\n  filterBy: PropTypes.string,\n  sortBy: PropTypes.string\n};\nDevicesTable.defaultProps = {\n  filterBy: undefined,\n  sortBy: undefined\n};\nexport default DevicesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicesTable\");","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/components/DevicesTable.js"],"names":["React","useContext","useMemo","useState","useDeviceList","Constants","PropTypes","Button","Table","CreateEditForm","DevicesContext","COLUMNS","DevicesTable","props","state","setState","filterBy","sortBy","devicesList","isLoading","edits","setEdits","data","newData","filter","device","type","Object","keys","map","key","createHeader","header","forEach","text","push","createBody","table","entity","children","system_name","hdd_capacity","e","onSelect","event","target","value","propTypes","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {useContext, useMemo, useState} from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport {Button, Table} from \"react-bootstrap\";\nimport CreateEditForm from \"../pages/CreateEditForm\";\nimport {DevicesContext} from \"../DevicesContext\";\n\n\nconst {COLUMNS} = Constants;\n\n\nconst DevicesTable = (props) => {\n    const [state, setState] = useContext(DevicesContext);\n    const {filterBy, sortBy} = props;\n    let {devicesList, isLoading} = useDeviceList();\n    const [edits, setEdits] = useState({});\n    isLoading = false;\n\n    const data = useMemo(() => {\n        let newData = devicesList;\n        if (filterBy && filterBy !== \"All\") {\n            newData = devicesList.filter(device => device.type === filterBy);\n            // devicesList.forEach(item => {\n            //         filterBy.forEach(filter => {\n            //             if (item.type === filter) {\n            //                 newData.push(item);\n            //             }\n            //         });\n            //     }\n            // );\n        }\n        return Object.keys(newData).map(\n            (key) => edits[key] || newData[key]\n        );\n    }, [devicesList, edits, filterBy, sortBy]);\n\n    const createHeader = () => {\n        let header = [];\n        COLUMNS.forEach(({text}) => {\n            header.push(<th>{text}</th>);\n        })\n        header.push(<th>{\"Selected\"}</th>);\n        return header;\n    };\n\n    const createBody = () => {\n        let table = [];\n        data.forEach((entity) => {\n            let children = [];\n            // console.log(entity);\n            const {system_name, type, hdd_capacity} = entity;\n            children.push(<td>{system_name}</td>);\n            children.push(<td>{type}</td>);\n            children.push(<td>{hdd_capacity}</td>);\n            children.push(<td><Button\n                id={entity}\n                onClick= {e => onSelect(e, \"value\")}\n                value={entity}> Edit </Button> </td>);\n            children.push(<td><a href={<CreateEditForm entity={entity}/>}> Select</a></td>);\n            table.push(<tr>{children}</tr>);\n        });\n        return table;\n    };\n\n    const onSelect = (event) => {\n        // const aaa= event.target.value;\n        // console.log(\"hola\", aaa, \"===\");\n        // const entity={hh:\"00\"}\n        // return <CreateEditForm entity={entity}/>;\n        setState(state => ({ ...state, entity: event.target.value }));\n    };\n\n    return (<Table>\n        <thead>\n        <tr>\n            {createHeader()}\n        </tr>\n        </thead>\n        <tbody>\n        {createBody()}\n        </tbody>\n    </Table>);\n};\n\nDevicesTable.propTypes = {\n    filterBy: PropTypes.string,\n    sortBy: PropTypes.string,\n}\n\nDevicesTable.defaultProps = {\n    filterBy: undefined,\n    sortBy: undefined,\n}\nexport default DevicesTable;\n"]},"metadata":{},"sourceType":"module"}