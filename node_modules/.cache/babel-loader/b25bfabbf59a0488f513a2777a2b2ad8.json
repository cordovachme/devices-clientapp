{"ast":null,"code":"import * as RestService from './restService';\nconst server = \"http://localhost:3000/\";\n\nconst save = (data, url) => new Promise((resolve, reject) => {\n  const options = {\n    url: `${server}${url}`,\n    method: 'POST',\n    data\n  };\n  RestService.send(options).then(response => {\n    resolve(response);\n  }).catch(error => {\n    const errorResponse = error.response.data;\n    reject(errorResponse);\n  });\n});\n\nconst get = url => new Promise((resolve, reject) => {\n  const options = {\n    url: `${server}${url}`,\n    method: \"GET\"\n  };\n  console.log(\"options===>\", options);\n  RestService.send(options).then(response => {\n    console.log(\"response===>\", response);\n    resolve(response);\n  }).catch(error => {\n    var _error$response;\n\n    console.log(\"error===>\", error);\n    const errorResponse = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n    reject(errorResponse);\n  });\n});\n\nexport { save, get };","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/services/deviceService.js"],"names":["RestService","server","save","data","url","Promise","resolve","reject","options","method","send","then","response","catch","error","errorResponse","get","console","log"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,MAAM,GAAG,wBAAf;;AACA,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACzD,QAAMC,OAAO,GAAG;AACZJ,IAAAA,GAAG,EAAG,GAAEH,MAAO,GAAEG,GAAI,EADT;AAEZK,IAAAA,MAAM,EAAE,MAFI;AAGZN,IAAAA;AAHY,GAAhB;AAKAH,EAAAA,WAAW,CAACU,IAAZ,CAAiBF,OAAjB,EACKG,IADL,CACWC,QAAD,IAAc;AAChBN,IAAAA,OAAO,CAACM,QAAD,CAAP;AACH,GAHL,EAIKC,KAJL,CAIYC,KAAD,IAAW;AACd,UAAMC,aAAa,GAAGD,KAAK,CAACF,QAAN,CAAeT,IAArC;AACAI,IAAAA,MAAM,CAACQ,aAAD,CAAN;AACH,GAPL;AAQH,CAd2B,CAA5B;;AAgBA,MAAMC,GAAG,GAAIZ,GAAD,IAAS,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClD,QAAMC,OAAO,GAAG;AACZJ,IAAAA,GAAG,EAAG,GAAEH,MAAO,GAAEG,GAAI,EADT;AAEZK,IAAAA,MAAM,EAAE;AAFI,GAAhB;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,OAA3B;AAEAR,EAAAA,WAAW,CAACU,IAAZ,CAAiBF,OAAjB,EACKG,IADL,CACWC,QAAD,IAAc;AAChBK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,QAA5B;AACAN,IAAAA,OAAO,CAACM,QAAD,CAAP;AACH,GAJL,EAKKC,KALL,CAKYC,KAAD,IAAW;AAAA;;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AACA,UAAMC,aAAa,GAAGD,KAAH,aAAGA,KAAH,0CAAGA,KAAK,CAAEF,QAAV,oDAAG,gBAAiBT,IAAvC;AACAI,IAAAA,MAAM,CAACQ,aAAD,CAAN;AACH,GATL;AAUH,CAjBoB,CAArB;;AAoBA,SAAQb,IAAR,EAAcc,GAAd","sourcesContent":["import * as RestService from './restService';\n\nconst server = \"http://localhost:3000/\";\nconst save = (data, url) => new Promise((resolve, reject) => {\n    const options = {\n        url: `${server}${url}`,\n        method: 'POST',\n        data,\n    };\n    RestService.send(options)\n        .then((response) => {\n            resolve(response);\n        })\n        .catch((error) => {\n            const errorResponse = error.response.data;\n            reject(errorResponse);\n        });\n});\n\nconst get = (url) => new Promise((resolve, reject) => {\n    const options = {\n        url: `${server}${url}`,\n        method: \"GET\",\n    };\n    console.log(\"options===>\", options);\n\n    RestService.send(options)\n        .then((response) => {\n            console.log(\"response===>\", response);\n            resolve(response);\n        })\n        .catch((error) => {\n            console.log(\"error===>\", error);\n            const errorResponse = error?.response?.data;\n            reject(errorResponse);\n        });\n});\n\n\nexport {save, get};\n"]},"metadata":{},"sourceType":"module"}