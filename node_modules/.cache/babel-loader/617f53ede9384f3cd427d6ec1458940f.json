{"ast":null,"code":"var _jsxFileName = \"/Users/mariacordova/Documents/exercise/devices-clientapp/src/components/DevicesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport { Button, Table } from \"react-bootstrap\";\nimport CreateEditForm from \"../pages/CreateEditForm\";\nimport useDeviceForm from \"../hooks/useDeviceForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  COLUMNS\n} = Constants;\n\nconst DevicesTable = props => {\n  _s();\n\n  const {\n    filterBy,\n    sortBy\n  } = props;\n  let {\n    devicesList,\n    isLoading\n  } = useDeviceList();\n  const [entityDeleted, setEntityDeleted] = useState({});\n  const [entity, setEntity] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const {\n    remove\n  } = useDeviceForm();\n  const data = useMemo(() => {\n    let newData = devicesList;\n\n    if (filterBy && filterBy !== \"All\") {\n      newData = devicesList.filter(device => device.type === filterBy);\n    }\n\n    console.log(\"deviceslist===>\", devicesList);\n    const aaa = Object.keys(newData).map(key => {\n      if (!entityDeleted) {\n        console.log(\"entra ifffff\");\n        return newData[key];\n      }\n    });\n    console.log(\"aaa===>\", aaa);\n    return aaa;\n  }, [devicesList, filterBy, sortBy, isLoading, entityDeleted]);\n\n  const createHeader = () => {\n    let header = [];\n    COLUMNS.forEach(_ref => {\n      let {\n        text\n      } = _ref;\n      header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this));\n    });\n    header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this));\n    return header;\n  };\n\n  const createBody = () => {\n    let table = [];\n    data.forEach((entity, index) => {\n      let children = [];\n      const {\n        system_name,\n        type,\n        hdd_capacity\n      } = entity;\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: system_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: hdd_capacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => onSelect(e, entity),\n          children: \" Edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => onDelete(e, entity),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }, this));\n      table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this));\n    });\n    return table;\n  };\n\n  const onSelect = (event, entity) => {\n    setShowModal(true);\n    setEntity(() => entity);\n  };\n\n  const onDelete = (event, entity) => {\n    remove({\n      entity\n    });\n    setEntityDeleted(entity);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: createHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: createBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), showModal ? /*#__PURE__*/_jsxDEV(CreateEditForm, {\n      entity: entity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_s(DevicesTable, \"pktJjzYTSqWImzXQT6NpDSWFqRY=\", false, function () {\n  return [useDeviceList, useDeviceForm];\n});\n\n_c = DevicesTable;\nDevicesTable.propTypes = {\n  filterBy: PropTypes.string,\n  sortBy: PropTypes.string\n};\nDevicesTable.defaultProps = {\n  filterBy: undefined,\n  sortBy: undefined\n};\nexport default DevicesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicesTable\");","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/components/DevicesTable.js"],"names":["React","useMemo","useState","useDeviceList","Constants","PropTypes","Button","Table","CreateEditForm","useDeviceForm","COLUMNS","DevicesTable","props","filterBy","sortBy","devicesList","isLoading","entityDeleted","setEntityDeleted","entity","setEntity","showModal","setShowModal","remove","data","newData","filter","device","type","console","log","aaa","Object","keys","map","key","createHeader","header","forEach","text","push","createBody","table","index","children","system_name","hdd_capacity","e","onSelect","onDelete","event","propTypes","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport {Button, Table} from \"react-bootstrap\";\nimport CreateEditForm from \"../pages/CreateEditForm\";\nimport useDeviceForm from \"../hooks/useDeviceForm\";\n\n\nconst {COLUMNS} = Constants;\n\n\nconst DevicesTable = (props) => {\n    const {filterBy, sortBy} = props;\n    let {devicesList, isLoading} = useDeviceList();\n    const [entityDeleted, setEntityDeleted] = useState({});\n    const [entity, setEntity] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const {remove} = useDeviceForm();\n\n    const data = useMemo(() => {\n        let newData = devicesList;\n        if (filterBy && filterBy !== \"All\") {\n            newData = devicesList.filter(device => device.type === filterBy);\n        }\n        console.log(\"deviceslist===>\", devicesList);\n        const aaa = Object.keys(newData).map(\n            (key) => {\n                if (!entityDeleted) {\n                    console.log(\"entra ifffff\");\n                    return newData[key]\n                }\n            }\n\n        );\n        console.log(\"aaa===>\", aaa);\n        return aaa;\n    }, [devicesList, filterBy, sortBy, isLoading, entityDeleted]);\n\n    const createHeader = () => {\n        let header = [];\n        COLUMNS.forEach(({text}) => {\n            header.push(<th>{text}</th>);\n        })\n        header.push(<th>{\"Selected\"}</th>);\n        return header;\n    };\n\n    const createBody = () => {\n        let table = [];\n        data.forEach((entity, index) => {\n            let children = [];\n            const {system_name, type, hdd_capacity} = entity;\n            children.push(<td>{system_name}</td>);\n            children.push(<td>{type}</td>);\n            children.push(<td>{hdd_capacity}</td>);\n            children.push(<td><Button\n                onClick={e => onSelect(e, entity)}\n            > Edit </Button><Button\n                onClick={e => onDelete(e, entity)}\n            > Delete </Button></td>);\n            table.push(<tr>{children}</tr>);\n        });\n        return table;\n    };\n\n    const onSelect = (event, entity) => {\n        setShowModal(true);\n        setEntity(() => entity);\n    };\n    const onDelete = (event, entity) => {\n        remove({entity});\n        setEntityDeleted(entity);\n    };\n\n    return (<>\n            <Table>\n                <thead>\n                <tr>\n                    {createHeader()}\n                </tr>\n                </thead>\n                <tbody>\n                {createBody()}\n                </tbody>\n            </Table>\n            <br/>\n            {showModal ? <CreateEditForm entity={entity}/> : <></>}\n        </>\n    );\n};\n\nDevicesTable.propTypes = {\n    filterBy: PropTypes.string,\n    sortBy: PropTypes.string,\n}\n\nDevicesTable.defaultProps = {\n    filterBy: undefined,\n    sortBy: undefined,\n}\nexport default DevicesTable;\n"]},"metadata":{},"sourceType":"module"}