{"ast":null,"code":"var _jsxFileName = \"/Users/mariacordova/Documents/exercise/devices-clientapp/src/Components/DevicesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"react-bootstrap\";\nimport * as Icons from \"react-bootstrap-icons\";\nimport { Link } from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  COLUMNS\n} = Constants;\n\nconst DevicesTable = props => {\n  _s();\n\n  const {\n    filterBy,\n    sortBy\n  } = props;\n  let {\n    devicesList,\n    isLoading\n  } = useDeviceList();\n  const [edits, setEdits] = useState({});\n  isLoading = false;\n  const data = useMemo(() => {\n    let newData = devicesList;\n\n    if (filterBy && filterBy !== \"All\") {\n      newData = devicesList.filter(device => device.type === filterBy); // devicesList.forEach(item => {\n      //         filterBy.forEach(filter => {\n      //             if (item.type === filter) {\n      //                 newData.push(item);\n      //             }\n      //         });\n      //     }\n      // );\n    }\n\n    return Object.keys(newData).map(key => edits[key] || newData[key]);\n  }, [devicesList, edits, filterBy, sortBy]);\n\n  const createHeader = () => {\n    let header = [];\n    COLUMNS.forEach(_ref => {\n      let {\n        text\n      } = _ref;\n      header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this));\n    });\n    header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this));\n    return header;\n  };\n\n  const createBody = () => {\n    let table = [];\n    data.forEach(entity => {\n      let children = [];\n      const {\n        system_name,\n        type,\n        hdd_capacity\n      } = entity;\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: system_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: hdd_capacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Icons.PencilFill, {\n          value: entity,\n          onClick: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this));\n      table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }, this));\n    });\n    return table;\n  };\n\n  const onSelect = event => {\n    console.log(\"hola\", event.target.id, \"===\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: createHeader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: createBody()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DevicesTable, \"l3YM4mAScRz3l+C28FHjmIoJTTg=\", false, function () {\n  return [useDeviceList];\n});\n\n_c = DevicesTable;\nDevicesTable.propTypes = {\n  filterBy: PropTypes.string,\n  sortBy: PropTypes.string\n};\nDevicesTable.defaultProps = {\n  filterBy: undefined,\n  sortBy: undefined\n};\nexport default DevicesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicesTable\");","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/Components/DevicesTable.js"],"names":["React","useMemo","useState","useDeviceList","Constants","PropTypes","Table","Icons","Link","COLUMNS","DevicesTable","props","filterBy","sortBy","devicesList","isLoading","edits","setEdits","data","newData","filter","device","type","Object","keys","map","key","createHeader","header","forEach","text","push","createBody","table","entity","children","system_name","hdd_capacity","onSelect","event","console","log","target","id","propTypes","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"react-bootstrap\";\nimport * as Icons from \"react-bootstrap-icons\";\nimport {Link} from \"react-bootstrap-icons\";\n\n\nconst {COLUMNS} = Constants;\n\n\nconst DevicesTable = (props) => {\n    const {filterBy, sortBy} = props;\n    let {devicesList, isLoading} = useDeviceList();\n    const [edits, setEdits] = useState({});\n    isLoading = false;\n\n    const data = useMemo(() => {\n        let newData = devicesList;\n        if (filterBy && filterBy!==\"All\") {\n            newData = devicesList.filter(device=> device.type===filterBy);\n            // devicesList.forEach(item => {\n            //         filterBy.forEach(filter => {\n            //             if (item.type === filter) {\n            //                 newData.push(item);\n            //             }\n            //         });\n            //     }\n            // );\n        }\n        return Object.keys(newData).map(\n            (key) => edits[key] || newData[key]\n        );\n    }, [devicesList, edits, filterBy, sortBy]);\n\n    const createHeader = () => {\n        let header = [];\n        COLUMNS.forEach(({text}) => {\n            header.push(<th>{text}</th>);\n        })\n        header.push(<th>{\"Selected\"}</th>);\n        return header;\n    };\n\n    const createBody = () => {\n        let table = [];\n        data.forEach((entity) => {\n            let children = [];\n            const {system_name, type, hdd_capacity}= entity;\n            children.push(<td>{system_name}</td>);\n            children.push(<td>{type}</td>);\n            children.push(<td>{hdd_capacity}</td>);\n            children.push(<td><Icons.PencilFill value={entity} onClick={onSelect}/></td>);\n            table.push(<tr>{children}</tr>);\n        });\n        return table;\n    };\n\n    const onSelect=( event )=>{\n        console.log(\"hola\", event.target.id,\"===\");\n    };\n\n    return (<Table>\n        <thead>\n            <tr>\n                {createHeader()}\n            </tr>\n        </thead>\n        <tbody>\n            {createBody()}\n        </tbody>\n    </Table>);\n};\n\nDevicesTable.propTypes = {\n    filterBy: PropTypes.string,\n    sortBy: PropTypes.string,\n}\n\nDevicesTable.defaultProps = {\n    filterBy: undefined,\n    sortBy: undefined,\n}\nexport default DevicesTable;\n"]},"metadata":{},"sourceType":"module"}