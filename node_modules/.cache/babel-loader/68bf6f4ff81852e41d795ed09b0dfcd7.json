{"ast":null,"code":"var _jsxFileName = \"/Users/mariacordova/Documents/exercise/devices-clientapp/src/Components/DevicesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  COLUMNS\n} = Constants;\n\nconst DevicesTable = props => {\n  _s();\n\n  const {\n    filterBy,\n    sortBy\n  } = props;\n  let {\n    devicesList,\n    isLoading\n  } = useDeviceList(\"ss\", \"dd\");\n  const [edits, setEdits] = useState({});\n  isLoading = false;\n  const data = useMemo(() => {\n    let newData = devicesList;\n\n    if (filterBy) {\n      newData = [];\n      devicesList.forEach(item => {\n        filterBy.forEach(filter => {\n          if (item.type === filter) {\n            newData.push(item);\n          }\n        });\n      });\n    }\n\n    return Object.keys(newData).map(key => edits[key] || newData[key]);\n  }, [devicesList, edits, filterBy, sortBy]);\n\n  const createHeader = () => {\n    let header = [];\n    COLUMNS.forEach(_ref => {\n      let {\n        text\n      } = _ref;\n      header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this));\n    });\n    header.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this));\n    return header;\n  };\n\n  const createBody = () => {\n    let table = [];\n    data.forEach(_ref2 => {\n      let {\n        system_name,\n        type,\n        hdd_capacity\n      } = _ref2;\n      let children = [];\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: system_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this));\n      children.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: hdd_capacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this));\n      table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" children=\", children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this));\n    });\n    return table;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: createHeader()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: createBody()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DevicesTable, \"l3YM4mAScRz3l+C28FHjmIoJTTg=\", false, function () {\n  return [useDeviceList];\n});\n\n_c = DevicesTable;\nDevicesTable.propTypes = {\n  filterBy: PropTypes.string,\n  sortBy: PropTypes.string\n};\nDevicesTable.propTypes = {\n  filterBy: undefined,\n  sortBy: undefined\n};\nexport default DevicesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicesTable\");","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/Components/DevicesTable.js"],"names":["React","useMemo","useState","useDeviceList","Constants","PropTypes","Table","COLUMNS","DevicesTable","props","filterBy","sortBy","devicesList","isLoading","edits","setEdits","data","newData","forEach","item","filter","type","push","Object","keys","map","key","createHeader","header","text","createBody","table","system_name","hdd_capacity","children","propTypes","string","undefined"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from \"react\";\nimport useDeviceList from \"../hooks/useDeviceList\";\nimport Constants from \"../util/Constants\";\nimport PropTypes from \"prop-types\";\nimport {Table} from \"react-bootstrap\";\n\nconst {COLUMNS} = Constants;\n\n\nconst DevicesTable = (props) => {\n    const {filterBy, sortBy} = props;\n    let {devicesList, isLoading} = useDeviceList(\"ss\", \"dd\");\n    const [edits, setEdits] = useState({});\n    isLoading = false;\n\n    const data = useMemo(() => {\n        let newData = devicesList;\n        if (filterBy) {\n            newData = [];\n            devicesList.forEach(item => {\n                    filterBy.forEach(filter => {\n                        if (item.type === filter) {\n                            newData.push(item);\n                        }\n                    });\n                }\n            );\n        }\n        return Object.keys(newData).map(\n            (key) => edits[key] || newData[key]\n        );\n    }, [devicesList, edits, filterBy, sortBy]);\n\n\n    const createHeader = () => {\n        let header = [];\n        COLUMNS.forEach(({text}) => {\n            header.push(<th>{text}</th>);\n        })\n        header.push(<th>{\"Selected\"}</th>);\n\n        return header;\n    };\n    const createBody = () => {\n        let table = [];\n        data.forEach(({system_name, type, hdd_capacity}) => {\n            let children = [];\n            children.push(<td>{system_name}</td>);\n            children.push(<td>{type}</td>);\n            children.push(<td>{hdd_capacity}</td>);\n            table.push(<tr> children={children}</tr>);\n        });\n        return table;\n    };\n    return (<Table>\n        <thead>\n            <tr>\n                {createHeader()}\n            </tr>\n        </thead>\n        <tbody>\n            {createBody()}\n        </tbody>\n    </Table>);\n};\n\nDevicesTable.propTypes = {\n    filterBy: PropTypes.string,\n    sortBy: PropTypes.string,\n}\n\nDevicesTable.propTypes = {\n    filterBy: undefined,\n    sortBy: undefined,\n}\nexport default DevicesTable;\n"]},"metadata":{},"sourceType":"module"}