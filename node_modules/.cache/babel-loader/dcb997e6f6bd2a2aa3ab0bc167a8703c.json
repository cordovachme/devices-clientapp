{"ast":null,"code":"var _jsxFileName = \"/Users/mariacordova/Documents/exercise/devices-clientapp/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport DevicesTable from \"../Components/DevicesTable\";\nimport React, { useState } from \"react\";\nimport Constants from \"../util/Constants\";\nimport { Form, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  DEVICE_TYPE,\n  COLUMNS,\n  LABELS\n} = Constants;\n\nconst Dashboard = () => {\n  _s();\n\n  const [filterBy, setFilterBy] = useState(undefined);\n  const [sortBy, setSortBy] = useState(undefined);\n\n  const handleFilter = value => {\n    console.log(\"filterBy==>\", value);\n    setFilterBy(value);\n  };\n\n  const handleSort = (e, _ref) => {\n    let {\n      value\n    } = _ref;\n    setSortBy(value);\n    console.log(\"sortBy==>\", sortBy);\n  };\n\n  const drawOptions = data => {\n    let options = [];\n    data.forEach(option => {\n      options.push( /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        as: \"button\",\n        value: option.value,\n        children: option.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this));\n    });\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [LABELS.filter_device, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: \"Open this select menu\",\n        children: drawOptions(DEVICE_TYPE)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [LABELS.sort_by, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        onChange: handleSort,\n        children: drawOptions(COLUMNS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(DevicesTable, {\n        sortBy: sortBy,\n        filterBy: filterBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"4n+EOiiw4zzn62Bv2i6CDDO7+QU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/pages/Dashboard.js"],"names":["DevicesTable","React","useState","Constants","Form","DropdownButton","Dropdown","DEVICE_TYPE","COLUMNS","LABELS","Dashboard","filterBy","setFilterBy","undefined","sortBy","setSortBy","handleFilter","value","console","log","handleSort","e","drawOptions","data","options","forEach","option","push","text","filter_device","sort_by"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,QAA9B,QAA6C,iBAA7C;;;AAEA,MAAM;AAACC,EAAAA,WAAD;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,IAAiCN,SAAvC;;AAGA,MAAMO,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACW,SAAD,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACW,SAAD,CAApC;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACAL,IAAAA,WAAW,CAACK,KAAD,CAAX;AACH,GAHD;;AAIA,QAAMG,UAAU,GAAG,CAACC,CAAD,WAAgB;AAAA,QAAZ;AAACJ,MAAAA;AAAD,KAAY;AAC/BF,IAAAA,SAAS,CAACE,KAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,MAAzB;AACH,GAHD;;AAKA,QAAMQ,WAAW,GAAIC,IAAD,IAAU;AAC1B,QAAIC,OAAO,GAAG,EAAd;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAcC,MAAD,IAAY;AACrBF,MAAAA,OAAO,CAACG,IAAR,eACI,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,EAAE,EAAC,QAAlB;AACI,QAAA,KAAK,EAAED,MAAM,CAACT,KADlB;AAAA,kBAGKS,MAAM,CAACE;AAHZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARD;AASA,WAAOJ,OAAP;AACH,GAZD;;AAcA,sBAAQ;AAAA,4BACA;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,mBAAaf,MAAM,CAACoB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAC,sBAAnB;AAA0C,QAAA,KAAK,EAAC,uBAAhD;AAAA,kBACKP,WAAW,CAACf,WAAD;AADhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,mBAAaE,MAAM,CAACqB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,QAAQ,EAAEV,UAAvB;AAAA,kBACKE,WAAW,CAACd,OAAD;AADhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAaA;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,MAAM,EAAEM,MADZ;AAEI,QAAA,QAAQ,EAAEH;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBAAR;AAqBH,CAhDD;;GAAMD,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import DevicesTable from \"../Components/DevicesTable\";\nimport React, {useState} from \"react\";\nimport Constants from \"../util/Constants\";\nimport {Form, DropdownButton, Dropdown} from \"react-bootstrap\";\n\nconst {DEVICE_TYPE, COLUMNS, LABELS} = Constants;\n\n\nconst Dashboard = () => {\n    const [filterBy, setFilterBy] = useState(undefined);\n    const [sortBy, setSortBy] = useState(undefined);\n\n    const handleFilter = (value) => {\n        console.log(\"filterBy==>\", value);\n        setFilterBy(value);\n    };\n    const handleSort = (e, {value}) => {\n        setSortBy(value);\n        console.log(\"sortBy==>\", sortBy);\n    };\n\n    const drawOptions = (data) => {\n        let options = [];\n        data.forEach((option) => {\n            options.push(\n                <Dropdown.Item as=\"button\"\n                    value={option.value}\n                >\n                    {option.text}\n                </Dropdown.Item>\n            );\n        })\n        return options;\n    };\n\n    return (<>\n            <p>\n                <Form.Label>{LABELS.filter_device} </Form.Label>\n                <DropdownButton id=\"dropdown-item-button\" title=\"Open this select menu\">\n                    {drawOptions(DEVICE_TYPE)}\n                </DropdownButton>\n            </p>\n            <p>\n                <Form.Label>{LABELS.sort_by} </Form.Label>\n                <Form.Select onChange={handleSort}>\n                    {drawOptions(COLUMNS)}\n                </Form.Select>\n            </p>\n            <p>\n                <DevicesTable\n                    sortBy={sortBy}\n                    filterBy={filterBy}\n                />\n            </p>\n        </>\n    )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}