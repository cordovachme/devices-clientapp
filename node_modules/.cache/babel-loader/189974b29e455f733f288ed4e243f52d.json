{"ast":null,"code":"import * as RestService from './restService';\nimport Constants from \"../util/Constants\";\nconst server = \"http://localhost:3000/\";\nconst url = \"devices\";\nconst {\n  PUT,\n  DELETE\n} = Constants;\n\nconst buildOptions = (method, data) => {\n  return {\n    url: method === DELETE || method === PUT ? `${server}${url}/${data.id}` : `${server}${url}`,\n    method,\n    data\n  };\n};\n\nconst execute = _ref => {\n  let {\n    data,\n    method\n  } = _ref;\n  return new Promise((resolve, reject) => {\n    RestService.send(buildOptions(method, data)).then(response => {\n      resolve(response);\n    }).catch(error => {\n      const errorResponse = error.response.data;\n      reject(errorResponse);\n    });\n  });\n}; //\n// const save = (data, url) => new Promise((resolve, reject) => {\n//     RestService.send(buildOptions(\"POST\", data))\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const update = (data, url, id) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}/${id}`,\n//         method: 'PUT',\n//         data,\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const remove = (url, id) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}/${id}`,\n//         method: 'DELETE'\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const get = (url) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}`,\n//         method: \"GET\",\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error?.response?.data;\n//             reject(errorResponse);\n//         });\n// });\n// export {save, get, remove, update};\n\n\nexport { execute };","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/services/deviceService.js"],"names":["RestService","Constants","server","url","PUT","DELETE","buildOptions","method","data","id","execute","Promise","resolve","reject","send","then","response","catch","error","errorResponse"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,MAAMC,MAAM,GAAG,wBAAf;AACA,MAAMC,GAAG,GAAG,SAAZ;AACA,MAAM;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,IAAgBJ,SAAtB;;AAEA,MAAMK,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACnC,SAAO;AACHL,IAAAA,GAAG,EAAEI,MAAM,KAAGF,MAAT,IAAmBE,MAAM,KAAGH,GAA5B,GAAiC,GAAEF,MAAO,GAAEC,GAAI,IAAGK,IAAI,CAACC,EAAG,EAA3D,GAA8D,GAAEP,MAAO,GAAEC,GAAI,EAD/E;AAEHI,IAAAA,MAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CAND;;AAQA,MAAME,OAAO,GAAE;AAAA,MAAC;AAACF,IAAAA,IAAD;AAAOD,IAAAA;AAAP,GAAD;AAAA,SAAmB,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/Db,IAAAA,WAAW,CAACc,IAAZ,CAAiBR,YAAY,CAACC,MAAD,EAASC,IAAT,CAA7B,EACKO,IADL,CACWC,QAAD,IAAc;AAChBJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAHL,EAIKC,KAJL,CAIYC,KAAD,IAAW;AACd,YAAMC,aAAa,GAAGD,KAAK,CAACF,QAAN,CAAeR,IAArC;AACAK,MAAAA,MAAM,CAACM,aAAD,CAAN;AACH,KAPL;AAQH,GATiC,CAAnB;AAAA,CAAf,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,SAAQT,OAAR","sourcesContent":["import * as RestService from './restService';\nimport Constants from \"../util/Constants\";\n\nconst server = \"http://localhost:3000/\";\nconst url = \"devices\";\nconst {PUT, DELETE} = Constants;\n\nconst buildOptions = (method, data) => {\n    return {\n        url: method===DELETE || method===PUT?`${server}${url}/${data.id}`:`${server}${url}`,\n        method,\n        data,\n    }\n};\n\nconst execute =({data, method})=> new Promise((resolve, reject) => {\n    RestService.send(buildOptions(method, data))\n        .then((response) => {\n            resolve(response);\n        })\n        .catch((error) => {\n            const errorResponse = error.response.data;\n            reject(errorResponse);\n        });\n});\n\n//\n// const save = (data, url) => new Promise((resolve, reject) => {\n//     RestService.send(buildOptions(\"POST\", data))\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const update = (data, url, id) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}/${id}`,\n//         method: 'PUT',\n//         data,\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const remove = (url, id) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}/${id}`,\n//         method: 'DELETE'\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error.response.data;\n//             reject(errorResponse);\n//         });\n// });\n//\n// const get = (url) => new Promise((resolve, reject) => {\n//     const options = {\n//         url: `${server}${url}`,\n//         method: \"GET\",\n//     };\n//     RestService.send(options)\n//         .then((response) => {\n//             resolve(response);\n//         })\n//         .catch((error) => {\n//             const errorResponse = error?.response?.data;\n//             reject(errorResponse);\n//         });\n// });\n\n\n// export {save, get, remove, update};\nexport {execute};\n"]},"metadata":{},"sourceType":"module"}