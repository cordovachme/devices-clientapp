{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as DeviceService from \"../services/deviceService\";\nimport { useEffect, useState } from \"react\";\nimport Constants from \"../util/Constants\";\nconst {\n  GET\n} = Constants;\n\nconst useDeviceList = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const getList = async () => {\n      const response = await DeviceService.execute({\n        method: GET\n      });\n      setIsLoading(false);\n      setData(response);\n    };\n\n    getList();\n  }, []);\n  return {\n    devicesList: data,\n    isLoading\n  };\n};\n\n_s(useDeviceList, \"yCbcCKgPyo8cIUVOXbvPPzfIk6o=\");\n\nexport default useDeviceList;","map":{"version":3,"sources":["/Users/mariacordova/Documents/exercise/devices-clientapp/src/hooks/useDeviceList.js"],"names":["DeviceService","useEffect","useState","Constants","GET","useDeviceList","data","setData","isLoading","setIsLoading","getList","response","execute","method","devicesList"],"mappings":";;AAAA,OAAO,KAAKA,aAAZ,MAA+B,2BAA/B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAQD,SAAd;;AAEA,MAAME,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,OAAO,GAAG,YAAY;AACxB,YAAMC,QAAQ,GAAG,MAAMX,aAAa,CAACY,OAAd,CAAsB;AAACC,QAAAA,MAAM,EAACT;AAAR,OAAtB,CAAvB;AAEAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KALD;;AAMAD,IAAAA,OAAO;AACV,GARQ,EAQN,EARM,CAAT;AASA,SAAO;AACHI,IAAAA,WAAW,EAAER,IADV;AAEHE,IAAAA;AAFG,GAAP;AAIH,CAhBD;;GAAMH,a;;AAkBN,eAAeA,aAAf","sourcesContent":["import * as DeviceService from \"../services/deviceService\";\nimport {useEffect, useState} from \"react\";\nimport Constants from \"../util/Constants\";\n\nconst {GET} = Constants;\n\nconst useDeviceList = () => {\n    const [data, setData] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        const getList = async () => {\n            const response = await DeviceService.execute({method:GET});\n\n            setIsLoading(false);\n            setData(response);\n        };\n        getList();\n    }, []);\n    return {\n        devicesList: data,\n        isLoading\n    };\n};\n\nexport default useDeviceList;\n"]},"metadata":{},"sourceType":"module"}